<?xml version="1.0"?>
<launch>

  <arg name="use_sensors" default="true" doc="whether to use the onboard sensors or use rosbag"/>

  <include if="$(arg use_sensors)" file="$(find ouster_ros)/launch/sensor.launch">
    <arg name="sensor_hostname" value="192.168.50.13" />
    <arg name="metadata" value="/home/dev/.ros/lidar_metadata.json" />
    <arg name="timestamp_mode" value="TIME_FROM_ROS_TIME" />
    <arg name="viz" value="false" />
  </include>

  <node name="obstacle_detector_node" pkg="lidar_obstacle_detector" type="obstacle_detector_node" output="screen">
    <!-- Input Topic Names -->
    <param name="lidar_points_topic"      value="/ouster/points"/>
    <!-- Output Topic Names -->
    <param name="cloud_ground_topic"      value="obstacle_detector/cloud_ground"/>
    <param name="cloud_clusters_topic"    value="obstacle_detector/cloud_clusters"/>
    <param name="jsk_bboxes_topic"        value="obstacle_detector/jsk_bboxes"/>
    <param name="autoware_objects_topic"  value="obstacle_detector/objects"/>
    <!-- Parameters -->
    <param name="bbox_target_frame"       value="os_lidar"/>
  </node>

  <node name="safety_checker_node" pkg="lidar_obstacle_detector" type="safety_checker.py" output="screen">
    <param name="base_frame"   type="string"  value="os_lidar"/>
  </node>

  <!-- Dynamic Reconfigure GUI -->
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" />

  <!-- Autoware Object Visualizer (if you have the `lgsvl_utils` pkg, or you can use the official Autoware one) -->
  <!-- <node ns="/obstacle_detector" pkg="lgsvl_utils" type="detected_objects_visualizer" name="autoware_objects_visualizer" output="log" /> -->

  <!-- Rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find lidar_obstacle_detector)/rviz/rover.rviz" output="log" respawn="true" />

  <!-- Camera -->
  <include if="$(arg use_sensors)" file="$(find realsense2_camera)/launch/rs_camera.launch"/>

</launch>